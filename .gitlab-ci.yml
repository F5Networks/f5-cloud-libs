image: node:6

stages:
    - test
    - update
    - package
    - publish
    - notify

variables:
  GIT_STRATEGY: fetch

cache:
    paths:
        - node_modules/

test_node6:
    image: node:6
    tags:
        - docker-executor
    stage: test
    except:
        - triggers
    script:
        - npm install --registry ${NPM_REGISTRY}
        - npm run lint
        - npm test

test_node8:
    image: node:8
    tags:
        - docker-executor
    stage: test
    except:
        - triggers
    script:
        - npm install --registry ${NPM_REGISTRY}
        - npm run lint
        - npm test

update_hash:
    tags:
        - docker-executor
    stage: update
    only:
        - triggers
    script:
        - if [[ -n "${UPDATE_HASH_PROJECT_ID}" && "${UPDATE_HASH_REPO}" && "${UPDATE_HASH_BRANCH}" && "${UPDATE_HASH_FILE}" ]]; then
        -     apt-get update
        -     apt-get install -y unzip
        -     ./build/updateHash.sh "${UPDATE_HASH_PROJECT_ID}" "${UPDATE_HASH_REPO}" "${UPDATE_HASH_BRANCH}" "${UPDATE_HASH_FILE}" "${UPDATE_HASH_BUILD_ID}"
        -     ./build/commitAndPushHash.sh
        - fi

package:
    tags:
        - docker-executor
    stage: package
    only:
        - /^release-.*/
        - /^hf-.*/
    script:
        - npm run package -- --no-deps
    artifacts:
        name: f5-cloud-libs-$CI_BUILD_REF
        paths:
            - dist/

pages:
    tags:
        - docker-executor
    stage: publish
    only:
        - develop
    script:
        - npm install --registry ${NPM_REGISTRY}
        - npm run doc
    artifacts:
        paths:
            - public

publish:
    image: node:8
    tags:
        - docker-executor
    stage: publish
    only:
        - master
    script:
        - npm install npm@latest -g --registry ${NPM_REGISTRY}
        - echo '//registry.npmjs.org/:_authToken="${NPM_TOKEN}"' > ./.npmrc
        - npm publish --access public

 # Do not run when triggered:
 #   - triggers do not modify our hash, they only update the verifyHash file
 #   - we are triggered by f5-cloud-iapps - do not trigger back or we get an infinite loop
notify:
    tags:
        - docker-executor
    stage: notify
    except:
        - master
        - triggers
    script:
        - if [[ "$AUTO_NOTIFY" == true ]]; then
        -     echo 'Running notifyProjects.sh'
        -     ./build/notifyProjects.sh
        - else
        -     echo AUTO_NOTIFY is off, skipping notification.
        - fi